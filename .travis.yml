arch: amd64
os: linux
dist: bionic
compiler:
  - gcc
language: node_js
node_js:
  - "6"
  - "7"
  - "8"
  - "10"
  - "12"
env:
  global:
    - ROS_DISTRO=melodic
    - ROS_CI_DESKTOP="`lsb_release -cs`"  # e.g. [precise|trusty|...]
    - CI_SOURCE_PATH=$(pwd)
    - ROSINSTALL_FILE=$CI_SOURCE_PATH/dependencies.rosinstall
    - CATKIN_OPTIONS=$CI_SOURCE_PATH/catkin.options
    - ROS_PARALLEL_JOBS='-j8 -l6'
    # Set the python path manually to include /usr/-/python2.7/dist-packages
    # as this is where apt-get installs python packages.
    - PYTHONPATH=$PYTHONPATH:/usr/lib/python2.7/dist-packages:/usr/local/lib/python2.7/dist-packages
branches:
  only:
    - melodic-devel

# Install system dependencies, namely a very barebones ROS setup.
before_install:
  - sudo apt-get install -y dpkg  # to upgrade to dpkg >= 1.17.5ubuntu5.8, which fixes https://bugs.launchpad.net/ubuntu/+source/dpkg/+bug/1730627
  - sudo sh -c "echo \"deb http://packages.ros.org/ros/ubuntu $ROS_CI_DESKTOP main\" > /etc/apt/sources.list.d/ros-latest.list"
  - sudo apt-key adv --keyserver 'hkp://keyserver.ubuntu.com:80' --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
  - sudo apt-get update -qq
  - sudo apt-get install -y python-catkin-pkg python-rosdep python-wstool ros-$ROS_DISTRO-ros-base
  - source /opt/ros/$ROS_DISTRO/setup.bash
  # Prepare rosdep to install dependencies.
  - sudo rosdep init
  - rosdep update

# Create a catkin workspace with the package under integration.
install:
  - mkdir -p ~/catkin_ws/src
  - cd ~/catkin_ws/src
  - catkin_init_workspace
  # Create the devel/setup.bash (run catkin_make with an empty workspace) and
  # source it to set the path variables.
  - cd ~/catkin_ws
  - catkin_make
  - source devel/setup.bash

  # Install required message packages
  - git clone https://github.com/ros/std_msgs.git src/std_msgs
  - git clone https://github.com/ros/common_msgs src/common_msgs
  - git clone https://github.com/RethinkRobotics-opensource/test_msgs.git src/test_msgs
  - git clone https://github.com/ros/ros_comm_msgs.git src/ros_comm_msgs
  # Install all dependencies, using wstool first and rosdep second.
  # wstool looks for a ROSINSTALL_FILE defined in the environment variables.
  - cd ~/catkin_ws/src
  - wstool init
  - if [[ -f $ROSINSTALL_FILE ]] ; then wstool merge $ROSINSTALL_FILE ; fi
  - wstool up
  # package depdencies: install using rosdep.
  - cd ~/catkin_ws
  - rosdep install -y --from-paths src --ignore-src --rosdistro $ROS_DISTRO
  - source devel/setup.bash

script:
# FIXME: enable testing with messages generated by gennodejs
#        once unicode fixes are merged.
#        We should test with gennodejs and rosnodejs messages
#  - cd $CI_SOURCE_PATH
#  - touch CATKIN_IGNORE
#  - cd ~/catkin_ws
#  - catkin_make
  - cd $CI_SOURCE_PATH
  - npm install
  - npm run compile
  - npm run generate
  - npm test
